<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.api.db.dao.TbMeetingDao">
    <select id="searchMeetingMembersInSameDept" parameterType="String" resultType="boolean">
        SELECT
            IF(COUNT(DISTINCT u.dept_id)=1,TRUE,FALSE ) AS bool
        FROM tb_meeting m
        JOIN tb_user u ON JSON_CONTAINS ( m.members, CAST( u.id AS CHAR ) )
        WHERE m.uuid=#{uuid} AND u.status = 1
    </select>
    <select id="searchMeetingById" parameterType="long" resultType="HashMap">
        SELECT
            m.uuid,
            m.creator_id AS creatorId,
            IF(creator_id=#{userId},"true","false") AS isCreator,
            m.title,
            u.name,
            DATE_FORMAT( m.date, '%Y-%m-%d' ) AS date,
            m.place,
            DATE_FORMAT( m.START, '%H:%i' ) AS start,
            DATE_FORMAT( m.END, '%H:%i' ) AS end,
            m.type,
            m.status,
            m.desc,
            m.instance_id AS instanceId
        FROM tb_meeting m
        JOIN tb_user u ON m.creator_id = u.id
        WHERE m.id =#{id} AND u.status = 1
    </select>
    <select id="searchOfflineMeetingByPage" parameterType="HashMap" resultType="HashMap">
        SELECT mr.name, temp.meeting FROM tb_meeting_room mr LEFT JOIN (
            SELECT place,
                   CONCAT(
                       "[",
                       GROUP_CONCAT(
                           JSON_OBJECT('start', DATE_FORMAT(start, '%H:%i'),
                                        'end', DATE_FORMAT(end, '%H:%i'),
                                        'status', `status`,
                                        'time', ROUND(timestampdiff(MINUTE, CONCAT(date," ",start),CONCAT(date," ",end))/30)
                           )
                       ),
                       "]") AS meeting
            FROM tb_meeting
            WHERE type = 2 AND `status` != 2 AND date = #{date}
            <if test="mold=='我的会议'">
                AND JSON_CONTAINS(members, CAST(#{userId} AS CHAR))
            </if>
            GROUP BY place) temp ON mr.name=temp.place
        WHERE mr.`status`=1
        LIMIT #{start}, #{length}
    </select>
    <select id="searchOfflineMeetingCount" parameterType="HashMap" resultType="long">
        SELECT COUNT(*)
        FROM tb_meeting_room
        WHERE status=1
    </select>
    <update id="updateMeetingInstanceId" parameterType="HashMap">
        UPDATE tb_meeting
        SET instance_id=#{instanceId}
        WHERE uuid=#{uuid}
    </update>
    <insert id="insert" parameterType="com.example.emos.api.db.pojo.TbMeeting">
        INSERT INTO tb_meeting
        SET title = #{title},
        <if test="uuid!=null">
            uuid = #{uuid},
        </if>
            `date` = #{date},
            creator_id = #{creatorId},
        <if test="place!=null">
            place=#{place},
        </if>
            `start`=#{start},
            `end`=#{end},
            `type`=#{type},
            members=#{members},
            `desc`=#{desc},
            instance_id=#{instanceId},
            status=#{status},
            create_time=NOW()
    </insert>
    <select id="searchOfflineMeetingInWeek" parameterType="HashMap" resultType="HashMap">
        SELECT id,
               title,
               DATE_FORMAT(`date`, "%m/%d") AS `date`,
               DATE_FORMAT(start, '%H:%i') AS `start`,
               ROUND(timestampdiff(MINUTE, CONCAT(`date`," ",`start`). CONCAT(`date`," ",`end`))/30) AS time,
               uuid,
               instance_id AS instanceId,
               IF(creator_id=#{userId},"true","false") AS isCreator,
               `status`
        FROM tb_meeting
        WHERE type = 2
        AND place = #{place}
        AND `status` != 2
        AND date BETWEEN #{startDate} AND #{endDate}
        <if test="mold=='我的会议'">
            AND JSON_CONTAINS(members, CAST(#{userId} AS CHAR))
        </if>
    </select>
    <select id="searchMeetingInfo" parameterType="long" resultType="HashMap">
        SELECT m.title,
               m.date,
               m.place,
               DATE_FORMAT(m.`start`,'%H:%i') AS `start`,
               DATE_FORMAT(m.`end`,'%H:%i') AS `end`,
               m.status,
               CONCAT( "[", GROUP_CONCAT( JSON_OBJECT ( "name", u.name, "photo", u.photo ) SEPARATOR "," ), "]" ) AS members
        FROM tb_meeting m
                 LEFT JOIN tb_user u ON JSON_CONTAINS ( m.members, CONVERT ( u.id, CHAR ) )
        WHERE m.id = #{id} AND u.status=1
    </select>
    <select id="searchCurrentMeetingInfo" parameterType="long" resultType="HashMap">
        SELECT m.title,
               m.date,
               m.place,
               DATE_FORMAT(m.`start`, '%H:%i') AS `start`,
               DATE_FORMAT(m.`end`, '%H:%i') AS `end`,
               m.status,
               (
                   SELECT CONCAT( "[", GROUP_CONCAT( JSON_OBJECT ( "name", u.name, "photo", u.photo ) SEPARATOR "," ), "]" )
                   FROM tb_user u WHERE JSON_CONTAINS ( m.present, CONVERT ( u.id, CHAR ) )
               ) AS present,
               (
                   SELECT CONCAT( "[", GROUP_CONCAT( JSON_OBJECT ( "name", u.name, "photo", u.photo ) SEPARATOR "," ), "]" )
                   FROM tb_user u WHERE JSON_CONTAINS ( m.unpresent, CONVERT ( u.id, CHAR ) )
                ) AS unpresent
        FROM tb_meeting m
        WHERE m.id = #{id}
    </select>
    <delete id="deleteMeetingApplication" parameterType="HashMap">
        DELETE FROM tb_meeting
        WHERE id=#{id} AND creator_id=#{creatorId}
    </delete>
    <select id="searchOnlineMeetingByPage" parameterType="HashMap" resultType="HashMap">
        SELECT m.id,
               m.title,
               u.`name` AS creatorName,
               IF(creator_id = #{userId}, "true", "false") AS isCreator,
               IF(JSON_CONTAINS(m.members, CAST(#{userId} AS CHAR))=1, "true", "false") AS mine,
               m.date,
               DATE_FORMAT(m.`start`, '%H:%i') AS `start`,
               DATE_FORMAT(m.`end`, '%H:%i') AS `end`,
               JSON_LENGTH(m.members) AS num,
               m.`status`,
               m.`desc`,
               m.uuid,
               m.instance_id AS instanceId
        FROM tb_meeting m,
        JOIN tb_user u ON m.creator_id = u.id
        WHERE m.type = 1 AND m.`status` != 2
        <if test="date!=null">
            AND date = #{date}
        </if>
        <if test="mold=='我的会议'">
            AND JSON_CONTAINS(m.members, CAST(#{userId} AS CHAR))
        </if>
        ORDER BY m.id DESC
        LIMIT #{start}, #{length}
    </select>
    <select id="searchOnlineMeetingCount" parameterType="HashMap" resultType="long">
        SELECT COUNT(*)
        FROM tb_meeting
        WHERE type = 1 AND `status` != 2
        <if test="date!=null">
            AND date=#{date}
        </if>
        <if test="mold=='我的会议'">
            AND JSON_CONTAINS(members, CAST(#{userId} AS CHAR))
        </if>
    </select>
    <select id="searchOnlineMeetingMembers" parameterType="HashMap" resultType="HashMap">
        SELECT u.id,
               u.name,
               u.photo,
               if(u.id = #{userId}, 1, 0) AS mine
        FROM tb_meeting m
        JOIN tb_user u ON JSON_CONTAINS(m.members, CAST(u.id AS CHAR))
        WHERE m.id = #{meetingId} AND u.`status` = 1
        ORDER BY mine DESC
    </select>
    <select id="searchCanCheckinMeeting" parameterType="HashMap" resultType="long">
        SELECT COUNT (*)
        FROM tb_meeting
        WHERE id = #{meetingId}
        AND status IN(3, 4)
        AND NOW() BETWEEN DATE_SUB(CONCAT(date, " ",`start`), INTERVAL 15 MINUTE) AND DATE_ADD(CONCAT(date," ",`start`),INTERVAL 5 MINUTE)
        AND JSON_CONTAINS(IFNULL(members,JSON_ARRAY()). CAST(#{userId} AS CHAR))
        AND NOT JSON_CONTAINS(IFNULL(present,JSON_ARRAY()), CAST( #{userId} AS CHAR))
    </select>
    <select id="updateMeetingPresent" parameterType="HashMap">
        UPDATE tb_meeting
        SET present = JSON_ARRAY_APPEND(IFNULL (present, JSON_ARRAY()), '$', #{userId})
        WHERE id = #{meetingId}
        AND NOW() >= DATE_SUB(CONCAT(date, " ", 'start'), INTERVAL 15 MINUTE)
        AND NOW() &lt; DATE_SUB(CONCAT(date," ",`end`),INTERVAL 15 MINUTE)
        AND JSON_CONTAINS ( IFNULL( members, JSON_ARRAY ( ) ), CAST( #{userId} AS CHAR ) )
        AND NOT JSON_CONTAINS ( IFNULL( present, JSON_ARRAY ( ) ), CAST( #{userId} AS CHAR ) )
    </select>
</mapper>
